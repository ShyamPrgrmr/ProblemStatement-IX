{"version":3,"sources":["components/editProduct.js","colors.js","components/deleteProduct.js","components/product.js","components/createProduct.js","components/SearchFile.js","App.js","serviceWorker.js","index.js"],"names":["EditProduct","props","componentDidMount","setState","data","editProduct","e","preventDefault","state","title","imgsrc","id","desc","this","style","styles","container","textAlign","label","type","value","placeholder","onChange","target","onClick","btn","Component","width","display","flexDirection","marginTop","backgroundColor","Product","block","img","src","productData","fontSize","color","fontWeight","buttonContainer","openEditDelete","React","padding","margin","boxShadow","borderRadius","minWidth","maxWidth","height","paddingLeft","marginLeft","CreateProduct","createProduct","App","show","products","url","fetchProduct","a","fetch","result","json","response","success","map","product","_id","alert","method","headers","body","JSON","stringify","tempProds","Date","getTime","push","ops","tempData","filter","length","editedProduct","edited","returnProduct","key","searchById","res","searchBar","marginRight","navMenu","buttongrp","className","navbar","wrapper","justifyContent","alignItems","menu","paddingTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f5f9cad6.chunk.js","sourcesContent":["import React,{Component} from 'react';\n\nimport {colorPrimary, colorfont, colorSecondary} from './../colors'\n\nexport default class EditProduct extends Component{\n        \n    constructor(props){\n        super(props)\n        this.state = {title:'',imgsrc:'',id:'',desc:''}\n    }\n\n    componentDidMount=()=>{\n        this.setState({...this.props.data});\n    }\n\n    editProduct = (e) =>{\n        e.preventDefault();\n        this.props.editProduct(this.state);        \n    }\n    \n    render(){\n        let title = this.props.data.title;\n        let desc = this.props.data.desc;\n        let imgsrc = this.props.data.imgsrc;\n\n        return(\n        <div style={styles.container}> \n            <h2 style={{textAlign:'center'}}>Edit Deatails</h2>\n            <label style={styles.label}>Title</label>\n            <input type=\"text\"  value={this.state.title}  placeholder='Enter Title' onChange={(e)=>{this.setState({title:e.target.value})}}></input>\n            <label style={styles.label}>Description</label>\n            <input type=\"text\"  value={this.state.desc}   placeholder='Enter Description'onChange={(e)=>{this.setState({desc:e.target.value})}}></input>\n            <label style={styles.label}>Image source</label>\n            <input type=\"text\"  value={this.state.imgsrc} placeholder='Enter Image Source'  onChange={(e)=>{this.setState({imgsrc:e.target.value})}}></input>\n            <button onClick={this.editProduct} style={styles.btn}>Edit</button>\n        </div>)\n    }\n\n}\n\nconst styles = {\n    container:{\n        width:'350px',\n        display:'flex',\n        flexDirection:'column'\n    },\n    label:{\n        marginTop:'5px'\n    },\n    btn:{\n        backgroundColor:colorPrimary,\n        marginTop:'10px'\n    }\n}","export const colorPrimary = \"#8080df\";\nexport const colorSecondary = \"#4290f5\";\nexport const colorfont = \"#fff\";","import React,{Component} from 'react';\n\nimport {colorPrimary, colorfont, colorSecondary} from './../colors'\n\nexport default class DeletePost extends Component{\n    state = this.props\n    \n    render(){\n        return(\n        <div style={styles.container}> \n            <h2 style={{textAlign:'center'}}>Delete Product</h2>\n            <label style={styles.label}>Title</label>\n            <input type=\"text\" placeholder=\"Enter title\"></input>\n            <label style={styles.label}>Description</label>\n            <input type=\"text\" placeholder=\"Enter description\"></input>\n            <label style={styles.label}>Image source</label>\n            <input type=\"text\" placeholder=\"Enter image src\"></input>\n            <button style={styles.btn}>Delete</button>\n        </div>)\n    }\n\n}\n\nconst styles = {\n    container:{\n        width:'350px',\n        display:'flex',\n        flexDirection:'column'\n    },\n    label:{\n        marginTop:'5px'\n    },\n    btn:{\n        backgroundColor:colorPrimary,\n        marginTop:'10px'\n    }\n}","import React from 'react';\nimport {colorPrimary, colorfont, colorSecondary} from './../colors'\nimport EditProduct from './editProduct';\nimport DeleteProduct from './deleteProduct';\n\nexport default class Product extends React.Component{\n    state = this.props;\n\n    render(){\n        return(\n        <div style={style.block}>\n            <img style={style.img} src={this.state.data.imgsrc}></img>\n\n            <div style={style.productData}>\n                <div style={{fontSize:'9px',color:'darkgrey'}}>{\"Product ID : \"+this.state.data.id}</div>\n                <div style={{fontSize:'25px',fontWeight:'700'}}>{this.state.data.title}</div>\n                <div style={{marginTop:'10px'}}>{this.state.data.desc}</div>\n            </div>\n            \n            <div style={style.buttonContainer}>\n                <button style={style.btn} onClick={(e)=>{\n                    e.preventDefault();\n                    this.props.openEditDelete(this.state,'edit');\n                }}>Edit</button>\n                <button style={style.btn} onClick={(e)=>{\n                    e.preventDefault();\n                    this.props.openEditDelete(this.state.data.id,'delete');\n                }}>Delete</button>\n            </div>\n        </div>\n        )\n    }\n}\n\nconst style = {\n    block:{\n        width:'80%',\n        padding:'20px',\n        margin:'10px',\n        boxShadow:'2px 2px 2px 1px #8080df',\n        display:'flex',\n        borderRadius:'5px'\n    },\n    img:{\n        minWidth:'100px',\n        maxWidth:'100px',\n        height:'100px',\n        backgroundColor:'#000',\n    },\n    productData:{\n        display:'flex',\n        flexDirection:'column',\n        paddingLeft:'10px'\n    },\n    buttonContainer:{\n        marginLeft:'auto',\n        display:'flex',\n        height:'30px'\n    },\n    btn:{\n        backgroundColor:colorPrimary\n    }\n}","import React,{Component} from 'react';\n\nimport {colorPrimary, colorfont, colorSecondary} from './../colors'\n\nexport default class CreateProduct extends Component{\n    state = {title:'',desc:'',imgsrc:'',id:''};\n\n    createProduct = (e) =>{\n        e.preventDefault();\n        this.props.createProduct(this.state);\n    }\n    \n    render(){\n        return(\n        <div style={styles.container}>\n            <h2 style={{textAlign:'center'}}>Create product</h2>\n            <label style={styles.label}>Title</label>\n            <input type=\"text\" onChange={(e)=>{this.setState({title:e.target.value})}} placeholder=\"Enter title\"></input>\n            <label style={styles.label}>Description</label>\n            <input type=\"text\" onChange={(e)=>{this.setState({desc:e.target.value})}} placeholder=\"Enter description\"></input>\n            <label style={styles.label}>Image source</label>\n            <input type=\"text\" onChange={(e)=>{this.setState({imgsrc:e.target.value})}} placeholder=\"Enter image src\"></input>\n            <button style={styles.btn} onClick={this.createProduct}>Create</button>\n        </div>)\n    }\n\n}\n\nconst styles = {\n    container:{\n        width:'350px',\n        display:'flex',\n        flexDirection:'column'\n    },\n    label:{\n        marginTop:'5px'\n    },\n    btn:{\n        backgroundColor:colorPrimary,\n        marginTop:'10px'\n    }\n}","import React,{Component} from 'react';\n\nimport {colorPrimary, colorfont, colorSecondary} from './../colors'\n\nexport default class EditProduct extends Component{\n        \n    constructor(props){\n        super(props)\n        this.state = {title:'',imgsrc:'',id:'',desc:''}\n    }\n\n    componentDidMount=()=>{\n        this.setState({...this.props});\n    }\n\n    editProduct = (e) =>{\n        e.preventDefault();\n        this.props.editProduct(this.state);        \n    }\n    \n    render(){\n        let title = this.props.title;\n        let desc = this.props.desc;\n        let imgsrc = this.props.imgsrc;\n\n        return(\n        <div style={styles.container}> \n            <h2 style={{textAlign:'center'}}>Edit Deatails</h2>\n            <label style={styles.label}>Title</label>\n            <input type=\"text\"  value={this.state.title}  placeholder='Enter Title' onChange={(e)=>{this.setState({title:e.target.value})}}></input>\n            <label style={styles.label}>Description</label>\n            <input type=\"text\"  value={this.state.desc}   placeholder='Enter Description'onChange={(e)=>{this.setState({desc:e.target.value})}}></input>\n            <label style={styles.label}>Image source</label>\n            <input type=\"text\"  value={this.state.imgsrc} placeholder='Enter Image Source'  onChange={(e)=>{this.setState({imgsrc:e.target.value})}}></input>\n            <button onClick={this.editProduct} style={styles.btn}>Edit</button>\n            <button onClick={(e)=>{e.preventDefault();this.props.openEditDelete(this.state.id,'delete');}} style={styles.btn}>Delete</button>\n        </div>)\n    }\n\n}\n\nconst styles = {\n    container:{\n        width:'350px',\n        display:'flex',\n        flexDirection:'column'\n    },\n    label:{\n        marginTop:'5px'\n    },\n    btn:{\n        backgroundColor:colorPrimary,\n        marginTop:'10px'\n    }\n}","import React from 'react';\nimport {colorPrimary, colorfont, colorSecondary} from './colors';\nimport Product from './components/product';\nimport CreateProduct from './components/createProduct';\nimport EditProduct from './components/editProduct';\nimport SearchProduct from './components/SearchFile';\nimport './App.css';\n\nexport default class App extends React.Component{\n  \n  state = {show:'list',products:[],data:{},id:'',url:'http://localhost:5000/'}\n\n  fetchProduct= async ()=>{\n    try{\n      const result = await fetch(this.state.url+'getproduct');\n      const response = await result.json();\n      let data=[];\n      \n      if(response.success){\n        data = response.products.map(product => {\n          return(\n            {id:product._id,\n             title:product.title,\n             imgsrc:product.imgsrc,\n             desc:product.desc\n            })\n        });\n      }\n\n      this.setState({products:data}); \n    }catch(err){\n      alert('Error : '+err)\n    }\n      \n  }\n\n  createProduct = async (product) =>{\n    try{\n      let response = await fetch(this.state.url+'createproduct', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(product)\n      });\n      let result = await response.json();\n      if(!result){alert('Error')}\n      else{\n        if(result.success){\n            let tempProds = this.state.products;\n            let id = new Date().getTime();\n            product.id = result.result._id;\n            tempProds.push(product);\n            this.setState({products:tempProds,show:'list'});  \n        }\n      }\n    }catch(err){\n      alert('error : '+err)\n    }\n  }\n\n  openEditDelete = (data,ops)=>{\n    if(ops=='edit'){\n      this.setState({data:data,show:'edit'});\n    }else if(ops=='delete'){\n      let id = data;\n      let tempData = this.state.products.filter(product=>{\n        if(product.id===id){\n          return false;\n        }\n        return true;\n      })\n      if(this.state.products.length===1)\n        this.setState({products:[],show:'list'});\n      else\n        this.setState({products:tempData,show:'list'});\n\n    }\n  }\n\n\n  editProduct = async (editedProduct) =>{\n\n    let id = editedProduct.id;\n\n    try{\n      const response = await fetch(this.state.url+'editproduct',{\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editedProduct)\n      });\n\n      const result = await response.json();\n\n      if(result.success){\n        \n        let edited = this.state.products.map(product=>{\n          if(product.id!==id){\n            return product;\n          }\n          else{\n            return editedProduct;\n          }\n        });\n\n        this.setState({products:edited,show:'list'});\n      }else{\n        this.setState({show:'list'});\n      }\n\n    }catch(err){alert(\"Error : \"+err)}\n  }\n\n  returnProduct=()=>{\n    return this.state.products.map(\n      product =>{\n        return <Product key={product.id} openEditDelete={this.openEditDelete} data={{title:product.title,desc:product.desc,imgsrc:product.imgsrc,id:product.id}}/>\n      }\n    );\n  }\n  \n  componentDidMount=()=>{\n    this.fetchProduct();\n  }\n\n  show = () =>{\n      if(this.state.show==='list'){\n        \n        return <>\n           <h2 style={{}}>Product List</h2>\n          {this.returnProduct()}\n        </>;\n      }\n      else if(this.state.show==='create'){\n        \n        return <CreateProduct createProduct={this.createProduct}/>\n      }\n      else if(this.state.show==='edit'){\n        \n        return <EditProduct {...this.state.data} editProduct={this.editProduct}/>\n      }else if(this.state.show==='search'){\n        \n        return <SearchProduct {...this.state.data} editProduct={this.editProduct} openEditDelete={this.openEditDelete}></SearchProduct>\n      }\n  }\n\n  searchById=(e)=>{\n    e.preventDefault();\n    \n    let id = this.state.id;\n    \n    let res = this.state.products.filter(product=>{\n      if(id===product.id){\n        return true;\n      }\n      return false;\n    });\n\n    if(res.length!==1){\n      alert('Product is not found.');\n    }else{\n      this.setState({show:'search',data:res[0]});\n    }\n  \n  }\n\n  searchBar= () =>{\n    return ((this.state.show==='list' || this.state.show==='search')?  \n      <div style={{marginLeft:\"auto\"}}>\n        <input style={{marginRight:'10px'}} onChange={(e)=>{this.setState({id:e.target.value})}} placeholder='Enter Product id'/>\n        <button style={styles.btn} onClick={this.searchById}>Search</button>\n      </div>:null);\n  }\n\n  \n  navMenu =()=>{\n    return(<>\n       <div style={{fontSize:'20px',fontWeight:'600'}}>Products</div>\n            <div style={styles.buttongrp}>   \n                <button \n                className={this.state.show==='list'?'activebtn':''}\n                onClick={(e)=>{\n                  e.preventDefault();\n                  this.setState({show:'list'});\n                }}>Show List</button>\n\n                <button\n                className={this.state.show==='create'?'activebtn':''}\n                onClick={(e)=>{\n                  e.preventDefault();\n                  this.setState({show:'create'});\n                }}>Create Product</button>\n          </div>\n    </>);\n  }\n  \n  render(){\n    return(\n      <div style={styles.container}>\n        \n        <div style={styles.navbar}>\n           {this.navMenu()}\n        </div>\n\n        <div style={styles.searchBar}>\n            {this.searchBar()}\n        </div>\n    \n        <div style={styles.wrapper}>\n          {this.show()}\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  container:{\n    display:'flex',\n    flexDirection:'column'\n  },\n  navbar:{\n    height:'50px',\n    backgroundColor:colorPrimary,\n    color:colorfont,\n    display:'flex',\n    flexDirection:'row',\n    justifyContent:'center',\n    alignItems:'center',\n    paddingLeft:'10px'\n  },\n  menu:{\n    display:'flex',\n    padding:'10px',\n    paddingTop:'0px',\n    flexDirection:'row',\n    backgroundColor:colorPrimary\n  },\n  buttongrp:{\n    display:'flex',\n    marginLeft:'auto',\n    marginRight:'10px'\n  },\n  wrapper:{\n    display:'flex',\n    flexDirection:'column',\n    alignItems:'center',\n    \n  },\n  searchBar:{\n      display:'flex',\n      alignItems:'center'\n      ,marginTop:'10px'\n  },\n  btn:{\n    backgroundColor:colorPrimary,\n    marginRight:'10px'\n}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}